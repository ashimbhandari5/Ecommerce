// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Role {
  id   Int    @id @default(autoincrement())
  name String @unique

  users User[]

  @@map("role")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  mobile    String   @unique
  password  String
  address   String
  roleId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  role   Role    @relation(fields: [roleId], references: [id])
  orders Order[]
  cart   Cart[]

  @@map("user")
}

model Product {
  id          Int      @id @default(autoincrement())
  name        String
  quantity    Int
  description String
  price       String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  orders     Order[]
  orderItems OrderItem[]
  carts      Cart[]

  @@map("product")
}

model Order {
  id          Int      @id @default(autoincrement())
  userId      Int
  productId   Int
  orderDate   DateTime
  total       String
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  user       User        @relation(fields: [userId], references: [id])
  product    Product     @relation(fields: [productId], references: [id])
  orderItems OrderItem[]

  @@map("order")
}

model OrderItem {
  id        Int      @id @default(autoincrement())
  orderId   Int
  productId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  order   Order   @relation(fields: [orderId], references: [id])
  product Product @relation(fields: [productId], references: [id])

  @@map("orderItem")
}

model Cart {
  id        Int      @id @default(autoincrement())
  userId    Int
  productId Int
  quantity  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user    User    @relation(fields: [userId], references: [id])
  product Product @relation(fields: [productId], references: [id])

  @@map("cart")
}

// model Role {
//   id   Int    @id @default(autoincrement())
//   name String @unique

//   @@map("role")
// }

// model User {
//   id        Int      @id @default(autoincrement())
//   name      String
//   email     String   @unique
//   mobile    String   @unique
//   password  String
//   address   String
//   roleId    Int
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt

//   @@map("user")
// }

// model Product {
//   id          Int      @id @default(autoincrement())
//   name        String
//   quantity    Int
//   description String
//   price       String
//   createdAt   DateTime @default(now())
//   updatedAt   DateTime @updatedAt

//   @@map("product")
// }

// model Order {
//   id          Int      @id @default(autoincrement())
//   userId      Int
//   productId   Int
//   orderDate   Int
//   total       String
//   description String
//   createdAt   DateTime @default(now())
//   updatedAt   DateTime @updatedAt

//   @@map("order")
// }

// model OrderItem {
//   id        Int      @id @default(autoincrement())
//   orderId   Int
//   productId Int
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt

//   @@map("orderItem")
// }

// model Cart {
//   id        Int      @id @default(autoincrement())
//   userId    Int
//   productId Int
//   quantity  Int
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt

//   @@map("cart")
// }
